doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Mithril Framework

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body.override
    
    article
      
      section
        h1.bullet Mithril
        
      section
        ul
          h1.bullet Why?
          li: h2 Large, complex frameworks are common
          li: h2 Large, complex systems are common
          h1.bullet But...
          li: h2 I like small, simple APIs
          li: h2 I like small, simple components
        
      section
        h2.bullet agenda
        ul
          li: h1 What is Mithril?
          li: h1 Why do I care?
          li: h1 Code please.
          li: h1 Live demo
          li: h1 Hiccups
      
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h1.bullet What is Mithril?
      
      section
        h2.bullet.quote A Javascript Framework for Building Brilliant Applications
        h2.bullet.quote a client-side MVC framework
        h2.bullet.quote a tool to organize code in a way that is easy to think about and to maintain
    
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h1.bullet Why do I care?
        
      section.size-comparison
        h2.bullet <strong>Tiny</strong> Size
        small * (latest standard minified downloads)
        
        table
          thead
            tr
              th.angular Angular
                p: small (v1.3.16)
              th.react React
                p: small (v0.13.3)
              th.mithril Mithril
                p: small (v0.2.0)
          tbody
            tr
              td.angular.size
                h2 126kb
              td.react.size
                h2 122kb
              td.mithril.size
                h2 19kb

      section
        h2.bullet <strong>Fast</strong>
        h1.bullet Virtual DOM diffing
        div.bullet
          h1 Smart re-drawing
          small
            a(href="https://lhorie.github.io/mithril/mithril.computation.html#how-auto-redrawing-works")
              | How auto-redrawing works
        
      section
        h2.bullet <strong>All</strong> the things
        h1.bullet Components
        h1.bullet Routing
        h1.bullet AJAX
        h1.bullet Promises
        small.bullet * (some caveats,  
          a(href="https://lhorie.github.io/mithril/mithril.deferred.html#differences-from-promises-a-")
            | check the docs
          | )
      
      section
        h1.bullet 
          a(href="https://lhorie.github.io/mithril/mithril.html") High quality official docs
        div.bullet
          h2 Plus lots of examples on the 
          h1: a(href="http://lhorie.github.io/mithril-blog/") official blog
        
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        pre.code-heading
          code.language-javascript.
            // Code please.
        
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Components
        pre
          code.language-javascript.
            var homeComponent = {
              controller: function(args) {
                // this.heading = 'Home';
                return {
                  heading: 'Home'
                };
              },
              view: function(ctrl, args) {
                return m('div.home', [
                  m('h1', ctrl.heading)
                ]);
              }
            };

      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Routing
        pre
          code.language-javascript.
            // Routing attempts to match in order, but
            // I've found it to be pretty smart.
            m.route(document.querySelector('#app'), '/', {
              '/': home,
              '/:param?anotherParam': home
            });
          
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 AJAX & Promises
        pre
          code.language-javascript.
            var promise = m.request({
              method: 'GET',
              url: '/api/stuff',
              initialValue: []
            });
            var anotherPromise = m.deferred().promise;
            var everything = m.sync([promise, anotherPromise]);
            
            everything.then(...)
      
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Special Mention:
        h1 m.prop
        pre
          code.language-javascript.
            function User(data) {
              this.name = m.prop(data.name);
            }
            
            var user = new User({name: 'Tim'});
            JSON.stringify(user); // '{"name": "Tim"}'
            
            var users = m.prop([]);
            m.request({
              method: 'GET',
              url: 'api/users'
            }).then(users);
      
      section
        h1 Live demo
        
      section
        ul
          h1.bullet Hiccups
          li.bad: h2 Too much freedom?
          li.good: h2 Need clear, well-defined patterns
          li.good: h2 eslint / jshint &amp; jscs
          li.bad: h2 Standards across projects
          li.bad: h2 Formatters, i18n, ...
          li.good: h2 Good candidate for component library
        
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h1 Questions?
        pre.code-heading
          code.language-javascript.
            // Comments?
        p MSX syntax
        p server-side rendering
        p unit testing
        p compiled views
        
      section
        h2 Links
        h1: a(href='http://timweightman.github.io/mithril-presentation/') Slide deck
        h1: a(href='https://github.com/timweightman/mithril-presentation-demo') Demo code
        h1: a(href='https://lhorie.github.io/mithril/') Mithril website

    script(src='build/build.js')
